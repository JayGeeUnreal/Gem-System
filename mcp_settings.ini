[MCP]
# Choose the primary LLM to use: "gemini" or "ollama"
llm_choice = ollama
host = 127.0.0.1
port = 5000

[ChatInterceptor]
# Settings for the dummy server that intercepts messages from Social Stream Ninja
enabled = true
host = 127.0.0.1
port = 8889

[VisionService]
# This is the address of the API running inside vision.py
scan_url = http://127.0.0.1:5001/scan
    
# These are the words that will make the MCP call the scan_url
vision_trigger_words = see, look, describe, analyze, scan, what is, what's

[Gemini]
# Get your API key from Google AI Studio
api_key = YOUR_GEMINI_API_KEY_HERE
model = gemini-pro

[Ollama]
# The model name as it appears in `ollama list`
model = hf.co/unsloth/gemma-2-it-GGUF:Q4_K_M
# The full URL to Ollama's chat API endpoint
api_url = http://localhost:11434/api/chat

[Assistant]
max_response_length = 2000
wake_words = Gem, Jen, Jim
command_verbs = go, move, navigate, look, turn, get, grab, put
vision_trigger_words = see, look, describe, analyze, scan, what is, what's

[StyleTTS]
# Enable sending text to the StyleTTS2 server (true or false)
enabled = true
# The full URL to the /tts endpoint on your watcher.py server
tts_url = http://127.0.0.1:13300/tts

[SystemPrompt]
# This prompt guides the AI's behavior, especially for commands.
# You can write multi-line prompts by indenting the following lines.
prompt = You are a helpful AI assistant. When you detect a navigation command 
    based on provided context, you must respond ONLY with 'ACTION_GOTO:[target]' 
    where [target] is an object from the context. Otherwise, answer questions 
    naturally and concisely.

[SocialStream]
# Enable sending replies to Social Stream Ninja (true or false)
enabled = true
# Get your Session ID from the Social Stream Ninja app settings
session_id = Jt52wHCv2j
# Specify the default platform (e.g., "discord", "youtube", "twitch")
target_platform = discord
# The base URL for the API
api_url = https://io.socialstream.ninja
